"""employees_management.py

Revision ID: 37ec203e9f30
Revises: 
Create Date: 2024-10-07 18:58:50.147637

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '37ec203e9f30'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('cnss_number', sa.Integer(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender'), nullable=False),
    sa.Column('contract_type', sa.Enum('CDI', 'CDD', 'SIVP', 'APPRENTI', name='contracttype'), nullable=False),
    sa.Column('account_status', sa.Enum('ACTIVE', 'INACTIVE', name='accountstatus'), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("(contract_type IN ('CDD','CDI') AND cnss_number IS NOT NULL AND cnss_number::TEXT ~'^\d{8}-\d{2}$') OR  (contract_type IN ('SIVP','APPRENTI') AND (cnss_number IS NULL OR cnss_number::TEXT ~'^\d{8}-\d{2}$' ))", name='ck_employee_valid_cnss_number'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('jwt_blacklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account_activations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expired_date', sa.DateTime(), nullable=True),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('employeeId', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='accountstatus'), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['employeeId'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('change_password',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('epired_date', sa.DateTime(), nullable=True),
    sa.Column('employeeId', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('USED', 'PENDING', name='tokenstatus'), nullable=False),
    sa.Column('created_on', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['employeeId'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employeeId', sa.Integer(), nullable=True),
    sa.Column('role', sa.Enum('SUPERUSER', 'ADMIN', 'VENDOR', 'INVENTORY_MANAGER', name='role'), nullable=False),
    sa.ForeignKeyConstraint(['employeeId'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('employee_roles')
    op.drop_table('change_password')
    op.drop_table('account_activations')
    op.drop_table('jwt_blacklist')
    op.drop_table('employees')
    # ### end Alembic commands ###

